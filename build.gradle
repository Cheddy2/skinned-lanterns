plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'Shedaniel Maven'
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = 'TerraformersMC Maven'
        url = 'https://maven.terraformersmc.com/'
    }
    maven {
        name = "Curse"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    //Main Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    //Cloth
    modApi "me.shedaniel.cloth.api:cloth-api:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-api:${project.cloth_api_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

    //Modmenu
    modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {transitive(false)}
    modRuntime("com.terraformersmc:modmenu:${project.modmenu_version}")
    
    //LibCD
    modApi "io.github.cottonmc:LibCD:${project.libcd_version}"
    include "io.github.cottonmc:LibCD:${project.libcd_version}"

    //LTR
    modRuntime 'curse.maven:lil-tater-reloaded-383066:3086860'
}

sourceSets.main.resources.srcDirs += file "src/generated/resources"

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
