plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.mod_id
group = project.maven_group
version = System.env.GITHUB_ACTIONS == "true"
        ? "${project.mod_version}+build.${System.env.GITHUB_RUN_NUMBER}"
        : project.mod_version

repositories {
    maven {
        name = "Jitpack"
        url  = "https://jitpack.io/"
    }

    maven {
        name = "Shadew's Maven"
        url  = "https://maven.shadew.net/"
    }

    maven {
        name = "Gegy's Maven"
        url  = "https://maven.gegy.dev/"
    }

    maven {
        name = "Terraformers Maven"
        url  = "https://maven.terraformersmc.com/releases/"
    }

    maven {
        name = "Quilt Maven"
        url  = "https://maven.quiltmc.org/repository/release/"
    }

    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }

    maven {
        name = "Jared"
        url = "https://maven.blamejared.com/"
    }

    maven {
        name = "Ladysnake Libs"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

    maven {
        name = "Shedaniel Maven"
        url = "https://maven.shedaniel.me/"
    }

    maven {
        name "Jamieswhiteshirt Maven"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
    }
}

dependencies {
    // Required
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Libraries
    modImplementation ("com.terraformersmc:modmenu:${project.mod_menu_version}") { exclude group: "net.fabricmc.fabric-api" }
    modImplementation "io.github.cottonmc:LibCD:${project.libcd_version}"

    include "io.github.cottonmc:LibCD:${project.libcd_version}"

    //modImplementation("net.shadew:jedt:${project.jedt_version}") { exclude group: "net.fabricmc.fabric-api" }

    // Compatibility
//    modImplementation "vazkii.botania:Botania:1.18.1-425-FABRIC-SNAPSHOT"
//    modImplementation "vazkii.patchouli:Patchouli:1.18.1-61-FABRIC"
//    modImplementation "dev.emi:trinkets:3.1.0"
//    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:4.0.1"
//    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:4.0.1"
//    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:4.0.1"
//    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:2.1.1"
//    modImplementation "me.zeroeightsix:fiber:0.23.0-2"

    //jellyfishing

    // Utilities
    //modRuntimeOnly ("com.github.joaoh1:OkZoomer:${project.okzoomer_version}") { exclude group: "net.fabricmc.fabric-api" }
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:7.0.343"
}

loom {
    runs {
        datagen {
            server()

            name "Minecraft Data"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

            runDir "build/datagen"
        }
    }
}
assemble.dependsOn runDatagen

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

sourceSets {
    main{
        java {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
    from("LICENSE_ASSETS") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {}
}